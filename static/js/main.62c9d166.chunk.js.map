{"version":3,"sources":["components/Incrementer.js","components/Timer.js","App.js","index.js"],"names":["Incrementer","handleIncrement","title","paused","state","setState","lower","toLowerCase","className","id","onClick","type","value","name","readOnly","Timer","useState","sessionTimer","setSessionTimer","breakTimer","setBreakTimer","activeBreak","setActiveBreak","displayTimer","setDisplayTimer","Beep","useRef","setPaused","decrement","prev","setTimeout","reset","audio","current","currentTime","play","console","log","pause","playAudio","breakSession","useEffect","timerId","clearInterval","setInterval","ammount","Math","floor","minutes","seconds","toString","padStart","formatTimer","e","src","ref","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.62c9d166.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Incrementer({ handleIncrement, paused, title, setState, state }) {\n  const lower = title.toLowerCase();\n\n  return (\n    <div className=\"laboom\">\n      <span id={`${lower}-label`}>{title} Length</span>\n      <div className=\"button\">\n        <button\n          onClick={() => handleIncrement(-60, title)}\n          id={`${lower}-decrement`}\n        >\n          -\n        </button>\n        <input\n          type=\"number\"\n          value={state}\n          name=\"break\"\n          id={`${lower}-length`}\n          readOnly\n        />\n        <button\n          onClick={() => handleIncrement(60, title)}\n          id={`${lower}-increment`}\n        >\n          +\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default Incrementer;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport Incrementer from \"./Incrementer\";\nfunction Timer() {\n  const [sessionTimer, setSessionTimer] = useState(25 * 60);\n  const [breakTimer, setBreakTimer] = useState(5 * 60);\n  const [activeBreak, setActiveBreak] = useState(false);\n  const [displayTimer, setDisplayTimer] = useState(sessionTimer);\n  const Beep = useRef(null);\n  // let minutes = timer\n  // let seconds = 0\n  const [paused, setPaused] = useState(true);\n\n  const formatTimer = () => {\n    //\n    const minutes = Math.floor(displayTimer / 60);\n    const seconds = displayTimer % 60;\n    return `${minutes.toString().padStart(2, \"0\")}:${seconds\n      .toString()\n      .padStart(2, \"0\")}`;\n  };\n\n  const playAudio = () => {\n    const audio = Beep.current;\n    audio.currentTime = 0;\n    audio.play();\n    console.log(audio);\n    setTimeout(() => {\n      audio.pause();\n      audio.currentTime = 0;\n    }, 3000);\n  };\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const decrement = () => {\n    if (displayTimer === 0) {\n      return;\n    } else {\n      setDisplayTimer((prev) => {\n        if (prev === 1) {\n          // if activeBreak is true -> timer will reset to 25 minutes else it will reset to 5 minutes\n          setTimeout(() => {\n            if (activeBreak) {\n              return reset(true, \"Session\");\n            } else {\n              playAudio();\n              return reset(true, \"Break\");\n            }\n          }, 1000);\n          return 0;\n        } else {\n          return prev - 1;\n        }\n      });\n    }\n  };\n\n  const reset = (breakSession = false, type = false) => {\n    if (breakSession === false) {\n      Beep.current.pause();\n      Beep.current.currentTime = 0;\n      setSessionTimer(25 * 60);\n      setDisplayTimer(25 * 60);\n      setBreakTimer(5 * 60);\n      setActiveBreak(false);\n      setPaused(true);\n      return \"reset complete\";\n    } else {\n      if (type === \"Break\") {\n        setActiveBreak(true);\n        setDisplayTimer(breakTimer);\n      } else {\n        setActiveBreak(false);\n        setDisplayTimer(sessionTimer);\n      }\n    }\n  };\n\n  useEffect(() => {\n    let timerId = null;\n    if (!paused) {\n      timerId = setInterval(decrement, 1000);\n    } else {\n      if (displayTimer !== \"25:00\") {\n        clearInterval();\n      }\n    }\n\n    return () => clearInterval(timerId);\n  }, [paused, decrement, displayTimer]);\n\n  const handleStartStop = (event) => {\n    if (paused) {\n      setPaused(false);\n    } else if (!paused) {\n      setPaused(true);\n    }\n\n    // if(timer === 0 && seconds === 0){ handleStartStop()}\n    // if(seconds === 0){\n    //     minutes--\n    //     seconds = 59\n    // }else{\n    //     seconds--\n    // }\n  };\n\n  const handleIncrement = (ammount, type) => {\n    if (paused) {\n      if (type === \"Break\") {\n        setBreakTimer((prev) => {\n          if (prev + ammount <= 0) {\n            return prev;\n          }\n          if (prev + ammount > 60 * 60) {\n            return prev;\n          }\n          return prev + ammount;\n        });\n        if (activeBreak) {\n          setDisplayTimer(breakTimer);\n        }\n      } else {\n        setSessionTimer((prev) => {\n          if (prev + ammount <= 0) {\n            return prev;\n          }\n          if (prev + ammount > 60 * 60) {\n            return prev;\n          }\n          return prev + ammount;\n        });\n        if (!activeBreak) {\n          setDisplayTimer((prev) => {\n            if (sessionTimer + ammount === 0) {\n              return sessionTimer;\n            }\n            return sessionTimer + ammount;\n          });\n        }\n      }\n    }\n  };\n  return (\n    <div className=\"container\">\n      <div className=\"top\">\n        <Incrementer\n          paused={paused}\n          state={Math.floor(sessionTimer / 60)}\n          handleIncrement={handleIncrement}\n          title={\"Session\"}\n        />\n        <Incrementer\n          paused={paused}\n          state={Math.floor(breakTimer / 60)}\n          title={\"Break\"}\n          handleIncrement={handleIncrement}\n        />\n      </div>\n      <div className=\"timer\">\n        <h2 id=\"timer-label\">{activeBreak ? \"Break Time!\" : \"Focus Time!\"}</h2>\n        <h1 id=\"time-left\">{formatTimer()}</h1>\n        <div className=\"timer__butons\">\n          <button onClick={(e) => handleStartStop(e)} id=\"start_stop\">\n            {paused ? \"Start\" : \"Pause\"}\n          </button>\n          <button onClick={() => reset()} id=\"reset\">\n            Reset\n          </button>\n        </div>\n        <audio src=\"./beep.mp3\" id=\"beep\" ref={Beep}></audio>\n      </div>\n    </div>\n  );\n}\n\nexport default Timer;\n","import \"./App.css\";\nimport Timer from \"./components/Timer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Timer></Timer>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}